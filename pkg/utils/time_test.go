package utils_test

import (
	"orchestrator/common/pkg/utils"
	"testing"
	"time"

	"github.com/stretchr/testify/require"
)

func TestRoundToNearest5Minutes(t *testing.T) {
	testCases := map[string]string{
		"2024-01-12 14:14:23": "2024-01-12 14:10:00",
		"2024-01-12 14:26:47": "2024-01-12 14:25:00",
		"2024-01-12 14:30:00": "2024-01-12 14:30:00",
		"2024-01-12 14:34:59": "2024-01-12 14:30:00",
		"2024-01-12 14:00:00": "2024-01-12 14:00:00",
		"2024-01-12 14:07:15": "2024-01-12 14:05:00",
		"2024-01-12 14:12:45": "2024-01-12 14:10:00",
		"2024-01-12 14:55:10": "2024-01-12 14:55:00",
		"2024-01-12 14:59:59": "2024-01-12 14:55:00",
		"2024-01-12 15:00:00": "2024-01-12 15:00:00",
		"2024-01-12 23:59:59": "2024-01-12 23:55:00",
		"2024-01-12 00:00:00": "2024-01-12 00:00:00",
		"2024-01-12 00:02:30": "2024-01-12 00:00:00",
		"2024-01-12 00:03:30": "2024-01-12 00:00:00",
		"2024-01-12 00:04:30": "2024-01-12 00:00:00",
		"2024-01-12 00:05:30": "2024-01-12 00:05:00",
		"2024-01-12 12:45:00": "2024-01-12 12:45:00",
		"2024-01-12 12:46:00": "2024-01-12 12:45:00",
		"2024-01-12 12:47:00": "2024-01-12 12:45:00",
		"2024-01-12 12:48:00": "2024-01-12 12:45:00",
		"2024-01-12 12:49:00": "2024-01-12 12:45:00",
	}

	for inputStr, expectedStr := range testCases {
		input, err := time.Parse("2006-01-02 15:04:05", inputStr)
		require.NoError(t, err)
		expected, err := time.Parse("2006-01-02 15:04:05", expectedStr)
		require.NoError(t, err)

		require.Equalf(t, expected, utils.RoundToNearest5Minutes(input), "failed for %s", expectedStr)
	}
}

func TestRemoveTimezone(t *testing.T) {
	table := map[string]string{
		"2024-05-22 14:30:00 +02:00": "2024-05-22 14:30:00",
		"2024-05-21 14:30:00 -03:00": "2024-05-21 14:30:00",
		"2024-12-31 23:59:59 +01:00": "2024-12-31 23:59:59",
		"2024-01-01 00:00:00 +05:30": "2024-01-01 00:00:00",
		"2024-06-15 12:00:00 -07:00": "2024-06-15 12:00:00",
		"2024-02-29 12:00:00 +10:00": "2024-02-29 12:00:00", // Leap year
		"2023-03-10 08:45:00 +02:00": "2023-03-10 08:45:00",
		"2024-07-04 16:30:00 -04:00": "2024-07-04 16:30:00",
		"2024-11-05 05:15:00 +01:00": "2024-11-05 05:15:00",
		"2024-08-30 20:00:00 +03:00": "2024-08-30 20:00:00",
		"2024-10-31 23:59:59 +00:00": "2024-10-31 23:59:59",
	}
	layout := "2006-01-02 15:04:05 -07:00"
	for timeStr, expectedTime := range table {
		parsedTime, err := time.Parse(layout, timeStr)
		require.NoError(t, err)
		result := utils.RemoveTimezone(parsedTime)
		require.Equal(t, expectedTime, result.Format("2006-01-02 15:04:05"))
		require.Equal(t, time.UTC, result.Location())
	}
}
